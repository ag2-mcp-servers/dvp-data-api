# generated by fastapi-codegen:
#   filename:  openapi.yaml
#   timestamp: 2025-06-28T18:33:36+00:00

from __future__ import annotations

from enum import Enum
from typing import List, Optional, Union

from pydantic import BaseModel, Field, RootModel


class DatasetType(Enum):
    pulls = 'pulls'


class DataviewType(Enum):
    raw = 'raw'
    summary = 'summary'
    repo_summary = 'repo-summary'


class MonthModel(BaseModel):
    month: Optional[int] = None


class NamespaceData(BaseModel):
    namespaces: Optional[List[str]] = None


class PostUsers2FALoginErrorResponse(BaseModel):
    detail: Optional[str] = Field(
        None,
        description='Description of the error.',
        examples=['Incorrect authentication credentials'],
    )


class PostUsersLoginErrorResponse(BaseModel):
    detail: str = Field(
        ...,
        description='Description of the error.',
        examples=['Incorrect authentication credentials'],
    )
    login_2fa_token: Optional[str] = Field(
        None,
        description='Short time lived token to be used on `/v2/users/2fa-login` to complete the authentication. This field is present only if 2FA is enabled.',
        examples=[
            'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c'
        ],
    )


class PostUsersLoginSuccessResponse(BaseModel):
    token: Optional[str] = Field(
        None,
        description='Created authentication token.\n\nThis token can be used in the HTTP Authorization header as a JWT to authenticate with the Docker Hub APIs.\n',
        examples=[
            'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c'
        ],
    )


class ResponseDataFile(BaseModel):
    size: Optional[int] = None
    url: Optional[str] = None


class TimespanType(Enum):
    months = 'months'
    weeks = 'weeks'


class Users2FALoginRequest(BaseModel):
    code: str = Field(
        ...,
        description='The Time-based One-Time Password of the Docker Hub account to authenticate with.',
        examples=[123456],
    )
    login_2fa_token: str = Field(
        ...,
        description='The intermediate 2FA token returned from `/v2/users/login` API.',
        examples=[
            'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c'
        ],
    )


class UsersLoginRequest(BaseModel):
    password: str = Field(
        ...,
        description='The password or personal access token (PAT) of the Docker Hub account to authenticate with.',
        examples=['hunter2'],
    )
    username: str = Field(
        ...,
        description='The username of the Docker Hub account to authenticate with.',
        examples=['myusername'],
    )


class WeekModel(BaseModel):
    week: Optional[int] = None


class YearModel(BaseModel):
    year: Optional[int] = None


class DatasetModel(BaseModel):
    name: Optional[DatasetType] = None
    timespans: Optional[List[TimespanType]] = None
    views: Optional[List[DataviewType]] = None


class MonthData(BaseModel):
    months: Optional[List[MonthModel]] = None


class NamespaceMetadata(BaseModel):
    datasets: Optional[List[DatasetModel]] = None
    extraRepos: Optional[List[str]] = None
    namespace: Optional[str] = None


class ResponseData(BaseModel):
    data: Optional[List[ResponseDataFile]] = None


class TimespanModel(RootModel[Union[MonthModel, WeekModel]]):
    root: Union[MonthModel, WeekModel]


class WeekData(BaseModel):
    weeks: Optional[List[WeekModel]] = None


class YearData(BaseModel):
    years: Optional[List[YearModel]] = None


class TimespanData(RootModel[Union[MonthData, WeekData]]):
    root: Union[MonthData, WeekData]
